{"ast":null,"code":"import { __extends, __spreadArrays } from \"tslib\";\nimport { isNil, isNumber } from '@antv/util';\nimport Base from '../base';\n/**\n * 分类度量\n * @class\n */\nvar Category = /** @class */function (_super) {\n  __extends(Category, _super);\n  function Category() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'cat';\n    _this.isCategory = true;\n    return _this;\n  }\n  Category.prototype.buildIndexMap = function () {\n    if (!this.translateIndexMap) {\n      this.translateIndexMap = new Map();\n      // 重新构建缓存\n      for (var i = 0; i < this.values.length; i++) {\n        this.translateIndexMap.set(this.values[i], i);\n      }\n    }\n  };\n  Category.prototype.translate = function (value) {\n    // 按需构建 map\n    this.buildIndexMap();\n    // 找得到\n    var idx = this.translateIndexMap.get(value);\n    if (idx === undefined) {\n      idx = isNumber(value) ? value : NaN;\n    }\n    return idx;\n  };\n  Category.prototype.scale = function (value) {\n    var order = this.translate(value);\n    // 分类数据允许 0.5 范围内调整\n    // if (order < this.min - 0.5 || order > this.max + 0.5) {\n    //   return NaN;\n    // }\n    var percent = this.calcPercent(order, this.min, this.max);\n    return this.calcValue(percent, this.rangeMin(), this.rangeMax());\n  };\n  Category.prototype.invert = function (scaledValue) {\n    var domainRange = this.max - this.min;\n    var percent = this.calcPercent(scaledValue, this.rangeMin(), this.rangeMax());\n    var idx = Math.round(domainRange * percent) + this.min;\n    if (idx < this.min || idx > this.max) {\n      return NaN;\n    }\n    return this.values[idx];\n  };\n  Category.prototype.getText = function (value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var v = value;\n    // value为index\n    if (isNumber(value) && !this.values.includes(value)) {\n      v = this.values[v];\n    }\n    return _super.prototype.getText.apply(this, __spreadArrays([v], args));\n  };\n  // 复写属性\n  Category.prototype.initCfg = function () {\n    this.tickMethod = 'cat';\n  };\n  // 设置 min, max\n  Category.prototype.setDomain = function () {\n    // 用户有可能设置 min\n    if (isNil(this.getConfig('min'))) {\n      this.min = 0;\n    }\n    if (isNil(this.getConfig('max'))) {\n      var size = this.values.length;\n      this.max = size > 1 ? size - 1 : size;\n    }\n    // scale.init 的时候清除缓存\n    if (this.translateIndexMap) {\n      this.translateIndexMap = undefined;\n    }\n  };\n  return Category;\n}(Base);\nexport default Category;","map":{"version":3,"mappings":"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","names":["isNil","isNumber","Base","__extends","_this","Category","translateIndexMap","Map","i","values","length","set","value","buildIndexMap","idx","get","undefined","NaN","order","translate","percent","calcPercent","min","max","calcValue","rangeMin","rangeMax","scaledValue","domainRange","Math","round","_i","args","v","includes","_super","getText","tickMethod","getConfig","size"],"sources":["C:\\Users\\sandeep dangi\\OneDrive\\Desktop\\6th sem\\3rd sem\\company que\\react project\\mern\\admin-app\\node_modules\\@antv\\scale\\src\\category\\base.ts"],"sourcesContent":["import { indexOf, isNil, isNumber } from '@antv/util';\nimport Base from '../base';\n\n/**\n * 分类度量\n * @class\n */\nclass Category extends Base {\n  public readonly type: string = 'cat';\n  public readonly isCategory: boolean = true;\n\n  // 用于缓存 translate 函数\n  private translateIndexMap;\n\n  private buildIndexMap() {\n    if (!this.translateIndexMap) {\n      this.translateIndexMap = new Map();\n      // 重新构建缓存\n      for (let i = 0; i < this.values.length; i ++) {\n        this.translateIndexMap.set(this.values[i], i);\n      }\n    }\n  }\n\n  public translate(value: any): number {\n    // 按需构建 map\n    this.buildIndexMap();\n    // 找得到\n    let idx = this.translateIndexMap.get(value);\n    \n    if (idx === undefined) {\n      idx = isNumber(value) ? value : NaN;\n    }\n    return idx;\n  }\n\n  public scale(value: any): number {\n    const order = this.translate(value);\n    // 分类数据允许 0.5 范围内调整\n    // if (order < this.min - 0.5 || order > this.max + 0.5) {\n    //   return NaN;\n    // }\n    const percent = this.calcPercent(order, this.min, this.max);\n    return this.calcValue(percent, this.rangeMin(), this.rangeMax());\n  }\n\n  public invert(scaledValue: number) {\n    const domainRange = this.max - this.min;\n    const percent = this.calcPercent(scaledValue, this.rangeMin(), this.rangeMax());\n    const idx = Math.round(domainRange * percent) + this.min;\n    if (idx < this.min || idx > this.max) {\n      return NaN;\n    }\n    return this.values[idx];\n  }\n\n  public getText(value: any, ...args: any[]): string {\n    let v = value;\n    // value为index\n    if (isNumber(value) && !this.values.includes(value)) {\n      v = this.values[v];\n    }\n    return super.getText(v, ...args);\n  }\n  // 复写属性\n  protected initCfg() {\n    this.tickMethod = 'cat';\n  }\n  // 设置 min, max\n  protected setDomain() {\n    // 用户有可能设置 min\n    if (isNil(this.getConfig('min'))) {\n      this.min = 0;\n    }\n    if (isNil(this.getConfig('max'))) {\n      const size = this.values.length;\n      this.max = size > 1 ? size - 1 : size;\n    }\n\n    // scale.init 的时候清除缓存\n    if (this.translateIndexMap) {\n      this.translateIndexMap = undefined;\n    }\n  }\n}\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}