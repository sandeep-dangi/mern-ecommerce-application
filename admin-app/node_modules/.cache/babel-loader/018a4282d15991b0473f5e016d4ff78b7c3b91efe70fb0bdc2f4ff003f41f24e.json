{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { getDataWhetherPercentage } from '../../utils/transform/percent';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\n/**\n * 条形图\n */\nvar Bar = /** @class */function (_super) {\n  __extends(Bar, _super);\n  function Bar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n    _this.type = 'bar';\n    return _this;\n  }\n  /**\n   * 获取 条形图 默认配置项\n   * 供外部使用\n   */\n  Bar.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n  /**\n   * @override\n   */\n  Bar.prototype.changeData = function (data) {\n    var _a, _b;\n    this.updateOption({\n      data: data\n    });\n    var _c = this,\n      chart = _c.chart,\n      options = _c.options;\n    var isPercent = options.isPercent;\n    var xField = options.xField,\n      yField = options.yField,\n      xAxis = options.xAxis,\n      yAxis = options.yAxis;\n    _a = [yField, xField], xField = _a[0], yField = _a[1];\n    _b = [yAxis, xAxis], xAxis = _b[0], yAxis = _b[1];\n    var switchedFieldOptions = __assign(__assign({}, options), {\n      xField: xField,\n      yField: yField,\n      yAxis: yAxis,\n      xAxis: xAxis\n    });\n    meta({\n      chart: chart,\n      options: switchedFieldOptions\n    });\n    chart.changeData(getDataWhetherPercentage(data, xField, yField, xField, isPercent));\n  };\n  /**\n   * 获取 条形图 默认配置\n   */\n  Bar.prototype.getDefaultOptions = function () {\n    return Bar.getDefaultOptions();\n  };\n  /**\n   * 获取 条形图 的适配器\n   */\n  Bar.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n  return Bar;\n}(Plot);\nexport { Bar };","map":{"version":3,"mappings":";AACA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,OAAO,EAAEC,IAAI,QAAQ,WAAW;AACzC,SAASC,eAAe,QAAQ,aAAa;AAK7C;;;AAGA;EAAyBC;EAAzB;IAAA;IASE;IACgBC,UAAI,GAAW,KAAK;;EA8BtC;EAvCE;;;;EAIOC,qBAAiB,GAAxB;IACE,OAAOH,eAAe;EACxB,CAAC;EAKD;;;EAGOG,wBAAU,GAAjB,UAAkBC,IAAwB;;IACxC,IAAI,CAACC,YAAY,CAAC;MAAED,IAAI;IAAA,CAAE,CAAC;IACrB,SAAqB,IAAI;MAAvBE,KAAK;MAAEC,OAAO,aAAS;IACvB,aAAS,GAAKA,OAAO,UAAZ;IACX,UAAM,GAA2BA,OAAO,OAAlC;MAAEC,MAAM,GAAmBD,OAAO,OAA1B;MAAEE,KAAK,GAAYF,OAAO,MAAnB;MAAEG,KAAK,GAAKH,OAAO,MAAZ;IAClCI,KAAmB,CAACH,MAAM,EAAEI,MAAM,CAAC,EAAlCA,MAAM,UAAEJ,MAAM;IACfK,KAAiB,CAACH,KAAK,EAAED,KAAK,CAAC,EAA9BA,KAAK,UAAEC,KAAK;IACb,IAAMI,oBAAoB,yBAAQP,OAAO;MAAEK,MAAM;MAAEJ,MAAM;MAAEE,KAAK;MAAED,KAAK;IAAA,EAAE;IACzEV,IAAI,CAAC;MAAEO,KAAK;MAAEC,OAAO,EAAEO;IAAoB,CAAE,CAAC;IAC9CR,KAAK,CAACS,UAAU,CAAClB,wBAAwB,CAACO,IAAI,EAAEQ,MAAM,EAAEJ,MAAM,EAAEI,MAAM,EAAEI,SAAS,CAAC,CAAC;EACrF,CAAC;EAED;;;EAGUb,+BAAiB,GAA3B;IACE,OAAOA,GAAG,CAACc,iBAAiB,EAAE;EAChC,CAAC;EAED;;;EAGUd,8BAAgB,GAA1B;IACE,OAAOL,OAAO;EAChB,CAAC;EACH,UAAC;AAAD,CAAC,CAxCwBF,IAAI","names":["Plot","getDataWhetherPercentage","adaptor","meta","DEFAULT_OPTIONS","__extends","_this","Bar","data","updateOption","chart","options","yField","xAxis","yAxis","_a","xField","_b","switchedFieldOptions","changeData","isPercent","getDefaultOptions"],"sources":["C:\\Users\\sandeep dangi\\OneDrive\\Desktop\\6th sem\\3rd sem\\company que\\react project\\admin-app\\node_modules\\@antv\\g2plot\\src\\plots\\bar\\index.ts"],"sourcesContent":["import { Adaptor } from '../../core/adaptor';\nimport { Plot } from '../../core/plot';\nimport { getDataWhetherPercentage } from '../../utils/transform/percent';\nimport { adaptor, meta } from './adaptor';\nimport { DEFAULT_OPTIONS } from './constants';\nimport { BarOptions } from './types';\n\nexport type { BarOptions };\n\n/**\n * 条形图\n */\nexport class Bar extends Plot<BarOptions> {\n  /**\n   * 获取 条形图 默认配置项\n   * 供外部使用\n   */\n  static getDefaultOptions(): Partial<BarOptions> {\n    return DEFAULT_OPTIONS;\n  }\n\n  /** 图表类型 */\n  public readonly type: string = 'bar';\n\n  /**\n   * @override\n   */\n  public changeData(data: BarOptions['data']) {\n    this.updateOption({ data });\n    const { chart, options } = this;\n    const { isPercent } = options;\n    let { xField, yField, xAxis, yAxis } = options;\n    [xField, yField] = [yField, xField];\n    [xAxis, yAxis] = [yAxis, xAxis];\n    const switchedFieldOptions = { ...options, xField, yField, yAxis, xAxis };\n    meta({ chart, options: switchedFieldOptions });\n    chart.changeData(getDataWhetherPercentage(data, xField, yField, xField, isPercent));\n  }\n\n  /**\n   * 获取 条形图 默认配置\n   */\n  protected getDefaultOptions() {\n    return Bar.getDefaultOptions();\n  }\n\n  /**\n   * 获取 条形图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<BarOptions> {\n    return adaptor;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}