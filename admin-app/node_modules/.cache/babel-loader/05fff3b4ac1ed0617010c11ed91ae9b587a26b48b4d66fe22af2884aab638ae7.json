{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Action, Util } from '@antv/g2';\nimport { get, isNil, last, size } from '@antv/util';\nimport { deepAssign } from '../../utils/deep-assign';\n// 面包屑文字和分割符'/'之间的距离\nvar PADDING = 4;\n// 面包屑位置距离树图的距离\nvar PADDING_LEFT = 0;\n// 面包屑位置距离树图的顶部距离\nexport var PADDING_TOP = 5;\n/** Group name of breadCrumb: 面包屑 */\nexport var BREAD_CRUMB_NAME = 'drilldown-bread-crumb';\n// 面包屑默认配置\nexport var DEFAULT_BREAD_CRUMB_CONFIG = {\n  /** 位置，默认：左上角 */\n  position: 'top-left',\n  dividerText: '/',\n  textStyle: {\n    fontSize: 12,\n    fill: 'rgba(0, 0, 0, 0.65)',\n    cursor: 'pointer'\n  },\n  activeTextStyle: {\n    fill: '#87B5FF'\n  }\n};\n/**\n * hierarchy 数据转换的参数\n */\nexport var HIERARCHY_DATA_TRANSFORM_PARAMS = 'hierarchy-data-transform-params';\n/**\n * @description 下钻交互的 action\n * @author liuzhenying\n *\n * 适用于：hierarchy plot\n */\nvar DrillDownAction = /** @class */function (_super) {\n  __extends(DrillDownAction, _super);\n  function DrillDownAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** Action name */\n    _this.name = 'drill-down';\n    // 存储历史下钻数据\n    _this.historyCache = [];\n    // 面包屑 group\n    _this.breadCrumbGroup = null;\n    // 面包屑基础配置\n    _this.breadCrumbCfg = DEFAULT_BREAD_CRUMB_CONFIG;\n    return _this;\n  }\n  /**\n   * 点击事件, 下钻数据，并绘制面包屑\n   */\n  DrillDownAction.prototype.click = function () {\n    var data = get(this.context, ['event', 'data', 'data']);\n    if (!data) return false;\n    this.drill(data);\n    this.drawBreadCrumb();\n  };\n  /**\n   * 重置位置，初始化及触发 chart  afterchangesize 回调时使用\n   */\n  DrillDownAction.prototype.resetPosition = function () {\n    // 当在第一层级未绘制面包屑，此时 changedata 触发 resetPosition 函数，需判断 this.breadCrumbGroup 是否存在\n    if (!this.breadCrumbGroup) return;\n    var coordinate = this.context.view.getCoordinate();\n    var breadCrumbGroup = this.breadCrumbGroup;\n    var bbox = breadCrumbGroup.getBBox();\n    var position = this.getButtonCfg().position;\n    // @todo 后续抽取一个函数来处理，以及增加 margin 或者 padding 的设置\n    // 非 polar 的，需要使用 coordinate，除却图表组件\n    var point = {\n      x: coordinate.start.x,\n      y: coordinate.end.y - (bbox.height + PADDING_TOP * 2)\n    };\n    if (coordinate.isPolar) {\n      // 默认，左上角直接出发\n      point = {\n        x: 0,\n        y: 0\n      };\n    }\n    if (position === 'bottom-left') {\n      // 涉及到坐标反转的问题\n      point = {\n        x: coordinate.start.x,\n        y: coordinate.start.y\n      };\n    }\n    /** PADDING_LEFT, PADDING_TOP 与画布边缘的距离 */\n    var matrix = Util.transform(null, [['t', point.x + PADDING_LEFT, point.y + bbox.height + PADDING_TOP]]);\n    breadCrumbGroup.setMatrix(matrix);\n  };\n  /**\n   * 返回上一层\n   */\n  DrillDownAction.prototype.back = function () {\n    if (size(this.historyCache)) {\n      this.backTo(this.historyCache.slice(0, -1));\n    }\n  };\n  /**\n   * 重置\n   */\n  DrillDownAction.prototype.reset = function () {\n    if (this.historyCache[0]) {\n      this.backTo(this.historyCache.slice(0, 1));\n    }\n    // 清空\n    this.historyCache = [];\n    this.hideCrumbGroup();\n  };\n  /**\n   * 下钻数据并更新 view 显示层\n   * @param nodeInfo 下钻数据\n   */\n  DrillDownAction.prototype.drill = function (nodeInfo) {\n    var view = this.context.view;\n    var transformData = get(view, ['interactions', 'drill-down', 'cfg', 'transformData'], function (v) {\n      return v;\n    });\n    // 重新 update 数据\n    var drillData = transformData(__assign({\n      data: nodeInfo.data\n    }, nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS]));\n    view.changeData(drillData);\n    // 存储历史记录\n    var historyCache = [];\n    var node = nodeInfo;\n    while (node) {\n      var nodeData = node.data;\n      historyCache.unshift({\n        id: nodeData.name + \"_\" + node.height + \"_\" + node.depth,\n        name: nodeData.name,\n        // children 是实际数据\n        children: transformData(__assign({\n          data: nodeData\n        }, nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS]))\n      });\n      node = node.parent;\n    }\n    this.historyCache = (this.historyCache || []).slice(0, -1).concat(historyCache);\n  };\n  /**\n   * 回退事件，点击面包屑时触发\n   * @param historyCache 当前要回退到的历史\n   */\n  DrillDownAction.prototype.backTo = function (historyCache) {\n    if (!historyCache || historyCache.length <= 0) {\n      return;\n    }\n    var view = this.context.view;\n    var data = last(historyCache).children; // 处理后的数组\n    view.changeData(data);\n    if (historyCache.length > 1) {\n      this.historyCache = historyCache;\n      this.drawBreadCrumb();\n    } else {\n      // 清空\n      this.historyCache = [];\n      this.hideCrumbGroup();\n    }\n  };\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n  DrillDownAction.prototype.getButtonCfg = function () {\n    var view = this.context.view;\n    var drillDownConfig = get(view, ['interactions', 'drill-down', 'cfg', 'drillDownConfig']);\n    return deepAssign(this.breadCrumbCfg, drillDownConfig === null || drillDownConfig === void 0 ? void 0 : drillDownConfig.breadCrumb, this.cfg);\n  };\n  /**\n   * 显示面包屑\n   */\n  DrillDownAction.prototype.drawBreadCrumb = function () {\n    this.drawBreadCrumbGroup();\n    this.resetPosition();\n    this.breadCrumbGroup.show();\n  };\n  /**\n   * 绘制 Button 和 文本\n   */\n  DrillDownAction.prototype.drawBreadCrumbGroup = function () {\n    var _this = this;\n    var config = this.getButtonCfg();\n    var cache = this.historyCache;\n    // 初始化面包屑 group\n    if (!this.breadCrumbGroup) {\n      this.breadCrumbGroup = this.context.view.foregroundGroup.addGroup({\n        name: BREAD_CRUMB_NAME\n      });\n    } else {\n      this.breadCrumbGroup.clear();\n    }\n    // 绘制面包屑\n    var left = 0;\n    cache.forEach(function (record, index) {\n      // 添加文本\n      var textShape = _this.breadCrumbGroup.addShape({\n        type: 'text',\n        id: record.id,\n        name: BREAD_CRUMB_NAME + \"_\" + record.name + \"_text\",\n        attrs: __assign(__assign({\n          text: index === 0 && !isNil(config.rootText) ? config.rootText : record.name\n        }, config.textStyle), {\n          x: left,\n          y: 0\n        })\n      });\n      var textShapeBox = textShape.getBBox();\n      left += textShapeBox.width + PADDING;\n      // 增加文本事件\n      textShape.on('click', function (event) {\n        var _a;\n        var targetId = event.target.get('id');\n        if (targetId !== ((_a = last(cache)) === null || _a === void 0 ? void 0 : _a.id)) {\n          var newHistoryCache = cache.slice(0, cache.findIndex(function (d) {\n            return d.id === targetId;\n          }) + 1);\n          _this.backTo(newHistoryCache);\n        }\n      });\n      // active 效果内置\n      textShape.on('mouseenter', function (event) {\n        var _a;\n        var targetId = event.target.get('id');\n        if (targetId !== ((_a = last(cache)) === null || _a === void 0 ? void 0 : _a.id)) {\n          textShape.attr(config.activeTextStyle);\n        } else {\n          textShape.attr({\n            cursor: 'default'\n          });\n        }\n      });\n      textShape.on('mouseleave', function () {\n        textShape.attr(config.textStyle);\n      });\n      if (index < cache.length - 1) {\n        // 添加反斜杠\n        var dividerShape = _this.breadCrumbGroup.addShape({\n          type: 'text',\n          name: config.name + \"_\" + record.name + \"_divider\",\n          attrs: __assign(__assign({\n            text: config.dividerText\n          }, config.textStyle), {\n            x: left,\n            y: 0\n          })\n        });\n        var dividerBox = dividerShape.getBBox();\n        left += dividerBox.width + PADDING;\n      }\n    });\n  };\n  /**\n   * 隐藏面包屑\n   */\n  DrillDownAction.prototype.hideCrumbGroup = function () {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.hide();\n    }\n  };\n  /**\n   * @override\n   * destroy: 销毁资源\n   */\n  DrillDownAction.prototype.destroy = function () {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.remove();\n    }\n    _super.prototype.destroy.call(this);\n  };\n  return DrillDownAction;\n}(Action);\nexport { DrillDownAction };","map":{"version":3,"mappings":"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","names":["Action","Util","get","isNil","last","size","deepAssign","PADDING","PADDING_LEFT","PADDING_TOP","BREAD_CRUMB_NAME","DEFAULT_BREAD_CRUMB_CONFIG","position","dividerText","textStyle","fontSize","fill","cursor","activeTextStyle","HIERARCHY_DATA_TRANSFORM_PARAMS","__extends","_this","DrillDownAction","data","context","drill","drawBreadCrumb","breadCrumbGroup","coordinate","view","getCoordinate","bbox","getBBox","getButtonCfg","point","x","start","y","end","height","isPolar","matrix","transform","setMatrix","historyCache","backTo","slice","hideCrumbGroup","nodeInfo","transformData","v","drillData","changeData","node","nodeData","unshift","id","name","depth","children","parent","concat","length","drillDownConfig","breadCrumbCfg","breadCrumb","cfg","drawBreadCrumbGroup","resetPosition","show","config","cache","foregroundGroup","addGroup","clear","left","forEach","record","index","textShape","addShape","type","attrs","text","rootText","textShapeBox","width","on","event","targetId","target","newHistoryCache","findIndex","d","attr","dividerShape","dividerBox","hide","remove","_super","destroy"],"sources":["C:\\Users\\sandeep dangi\\OneDrive\\Desktop\\6th sem\\3rd sem\\company que\\react project\\mern\\admin-app\\node_modules\\@antv\\g2plot\\src\\interactions\\actions\\drill-down.ts"],"sourcesContent":["import { Action, IGroup, Util } from '@antv/g2';\nimport { get, isNil, last, size } from '@antv/util';\nimport { Data } from '../../types';\nimport { DrillDownCfg } from '../../types/drill-down';\nimport { deepAssign } from '../../utils/deep-assign';\n\n// 面包屑文字和分割符'/'之间的距离\nconst PADDING = 4;\n// 面包屑位置距离树图的距离\nconst PADDING_LEFT = 0;\n// 面包屑位置距离树图的顶部距离\nexport const PADDING_TOP = 5;\n\n/** Group name of breadCrumb: 面包屑 */\nexport const BREAD_CRUMB_NAME = 'drilldown-bread-crumb';\n\n// 面包屑默认配置\nexport const DEFAULT_BREAD_CRUMB_CONFIG: DrillDownCfg['breadCrumb'] = {\n  /** 位置，默认：左上角 */\n  position: 'top-left',\n  dividerText: '/',\n  textStyle: {\n    fontSize: 12,\n    fill: 'rgba(0, 0, 0, 0.65)',\n    cursor: 'pointer',\n  },\n  activeTextStyle: {\n    fill: '#87B5FF',\n  },\n};\n\n/**\n * hierarchy 数据转换的参数\n */\nexport const HIERARCHY_DATA_TRANSFORM_PARAMS = 'hierarchy-data-transform-params';\n\n/**\n * Hierarchy plot 节点的数据\n */\nexport type HierarchyNode<N = any /** 节点 */> = {\n  /** 节点的原始数据，树型结构（todo 是否更正 key 为 origin） */\n  data: { name: string; value?: any; children: { name: string; value?: any }[] };\n  /** 在构建节点数据时候，增加的扩展配置, 用于存储 transformData 的入参配置 */\n  [HIERARCHY_DATA_TRANSFORM_PARAMS]: object;\n  /** 当前的层级结构，每一次下钻都会更新. 不是 unique */\n  depth: number;\n  /** 当前所处高度，depth + height = 总的层级 */\n  height: number;\n  parent: N;\n  children: N[];\n};\n\ntype HistoryCache = {\n  name: string;\n  id: string;\n  children: Data;\n}[];\n\n/**\n * @description 下钻交互的 action\n * @author liuzhenying\n *\n * 适用于：hierarchy plot\n */\nexport class DrillDownAction extends Action {\n  /** Action name */\n  public name = 'drill-down';\n\n  // 存储历史下钻数据\n  protected historyCache: HistoryCache = [];\n  // 面包屑 group\n  private breadCrumbGroup: IGroup = null;\n  // 面包屑基础配置\n  private breadCrumbCfg: DrillDownCfg['breadCrumb'] = DEFAULT_BREAD_CRUMB_CONFIG;\n\n  /**\n   * 点击事件, 下钻数据，并绘制面包屑\n   */\n  public click() {\n    const data = get(this.context, ['event', 'data', 'data']);\n    if (!data) return false;\n\n    this.drill(data);\n    this.drawBreadCrumb();\n  }\n\n  /**\n   * 重置位置，初始化及触发 chart  afterchangesize 回调时使用\n   */\n  public resetPosition() {\n    // 当在第一层级未绘制面包屑，此时 changedata 触发 resetPosition 函数，需判断 this.breadCrumbGroup 是否存在\n    if (!this.breadCrumbGroup) return;\n    const coordinate = this.context.view.getCoordinate();\n    const breadCrumbGroup = this.breadCrumbGroup;\n    const bbox = breadCrumbGroup.getBBox();\n\n    const { position } = this.getButtonCfg();\n\n    // @todo 后续抽取一个函数来处理，以及增加 margin 或者 padding 的设置\n    // 非 polar 的，需要使用 coordinate，除却图表组件\n    let point = { x: coordinate.start.x, y: coordinate.end.y - (bbox.height + PADDING_TOP * 2) };\n    if (coordinate.isPolar) {\n      // 默认，左上角直接出发\n      point = { x: 0, y: 0 };\n    }\n    if (position === 'bottom-left') {\n      // 涉及到坐标反转的问题\n      point = { x: coordinate.start.x, y: coordinate.start.y };\n    }\n    /** PADDING_LEFT, PADDING_TOP 与画布边缘的距离 */\n    const matrix = Util.transform(null, [['t', point.x + PADDING_LEFT, point.y + bbox.height + PADDING_TOP]]);\n    breadCrumbGroup.setMatrix(matrix);\n  }\n\n  /**\n   * 返回上一层\n   */\n  public back(): void {\n    if (size(this.historyCache)) {\n      this.backTo(this.historyCache.slice(0, -1));\n    }\n  }\n\n  /**\n   * 重置\n   */\n  public reset(): void {\n    if (this.historyCache[0]) {\n      this.backTo(this.historyCache.slice(0, 1));\n    }\n    // 清空\n    this.historyCache = [];\n    this.hideCrumbGroup();\n  }\n\n  /**\n   * 下钻数据并更新 view 显示层\n   * @param nodeInfo 下钻数据\n   */\n  protected drill(nodeInfo: HierarchyNode) {\n    const { view } = this.context;\n    const transformData = get(view, ['interactions', 'drill-down', 'cfg', 'transformData'], (v) => v);\n\n    // 重新 update 数据\n    const drillData = transformData({ data: nodeInfo.data, ...nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] });\n    view.changeData(drillData);\n\n    // 存储历史记录\n    const historyCache: HistoryCache = [];\n\n    let node = nodeInfo;\n    while (node) {\n      const nodeData = node.data;\n      historyCache.unshift({\n        id: `${nodeData.name}_${node.height}_${node.depth}`,\n        name: nodeData.name,\n        // children 是实际数据\n        children: transformData({ data: nodeData, ...nodeInfo[HIERARCHY_DATA_TRANSFORM_PARAMS] }),\n      });\n      node = node.parent;\n    }\n\n    this.historyCache = (this.historyCache || []).slice(0, -1).concat(historyCache);\n  }\n\n  /**\n   * 回退事件，点击面包屑时触发\n   * @param historyCache 当前要回退到的历史\n   */\n  protected backTo(historyCache: HistoryCache) {\n    if (!historyCache || historyCache.length <= 0) {\n      return;\n    }\n\n    const { view } = this.context;\n    const data = last(historyCache).children; // 处理后的数组\n    view.changeData(data);\n\n    if (historyCache.length > 1) {\n      this.historyCache = historyCache;\n      this.drawBreadCrumb();\n    } else {\n      // 清空\n      this.historyCache = [];\n      this.hideCrumbGroup();\n    }\n  }\n\n  /**\n   * 获取 mix 默认的配置和用户配置\n   */\n  private getButtonCfg() {\n    const { view } = this.context;\n    const drillDownConfig: DrillDownCfg = get(view, ['interactions', 'drill-down', 'cfg', 'drillDownConfig']);\n\n    return deepAssign(this.breadCrumbCfg, drillDownConfig?.breadCrumb, this.cfg);\n  }\n\n  /**\n   * 显示面包屑\n   */\n  private drawBreadCrumb() {\n    this.drawBreadCrumbGroup();\n    this.resetPosition();\n    this.breadCrumbGroup.show();\n  }\n\n  /**\n   * 绘制 Button 和 文本\n   */\n  private drawBreadCrumbGroup() {\n    const config = this.getButtonCfg();\n    const cache = this.historyCache;\n\n    // 初始化面包屑 group\n    if (!this.breadCrumbGroup) {\n      this.breadCrumbGroup = this.context.view.foregroundGroup.addGroup({\n        name: BREAD_CRUMB_NAME,\n      });\n    } else {\n      this.breadCrumbGroup.clear();\n    }\n\n    // 绘制面包屑\n    let left = 0;\n    cache.forEach((record, index) => {\n      // 添加文本\n      const textShape = this.breadCrumbGroup.addShape({\n        type: 'text',\n        id: record.id,\n        name: `${BREAD_CRUMB_NAME}_${record.name}_text`,\n        attrs: {\n          text: index === 0 && !isNil(config.rootText) ? config.rootText : record.name,\n          ...config.textStyle,\n          x: left,\n          y: 0,\n        },\n      });\n\n      const textShapeBox = textShape.getBBox();\n      left += textShapeBox.width + PADDING;\n\n      // 增加文本事件\n      textShape.on('click', (event) => {\n        const targetId = event.target.get('id');\n        if (targetId !== last(cache)?.id) {\n          const newHistoryCache = cache.slice(0, cache.findIndex((d) => d.id === targetId) + 1);\n          this.backTo(newHistoryCache);\n        }\n      });\n      // active 效果内置\n      textShape.on('mouseenter', (event) => {\n        const targetId = event.target.get('id');\n        if (targetId !== last(cache)?.id) {\n          textShape.attr(config.activeTextStyle);\n        } else {\n          textShape.attr({ cursor: 'default' });\n        }\n      });\n      textShape.on('mouseleave', () => {\n        textShape.attr(config.textStyle);\n      });\n\n      if (index < cache.length - 1) {\n        // 添加反斜杠\n        const dividerShape = this.breadCrumbGroup.addShape({\n          type: 'text',\n          name: `${config.name}_${record.name}_divider`,\n          attrs: {\n            text: config.dividerText,\n            ...config.textStyle,\n            x: left,\n            y: 0,\n          },\n        });\n\n        const dividerBox = dividerShape.getBBox();\n        left += dividerBox.width + PADDING;\n      }\n    });\n  }\n\n  /**\n   * 隐藏面包屑\n   */\n  private hideCrumbGroup() {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.hide();\n    }\n  }\n\n  /**\n   * @override\n   * destroy: 销毁资源\n   */\n  public destroy() {\n    if (this.breadCrumbGroup) {\n      this.breadCrumbGroup.remove();\n    }\n    super.destroy();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}