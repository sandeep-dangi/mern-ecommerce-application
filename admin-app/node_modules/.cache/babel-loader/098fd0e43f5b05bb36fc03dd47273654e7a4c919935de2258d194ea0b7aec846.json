{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { animation, annotation, interaction, legend, scale, theme, tooltip } from '../../adaptor/common';\nimport { area, line, point } from '../../adaptor/geometries';\nimport { deepAssign, findGeometry, flow, transformLabel } from '../../utils';\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params) {\n  var chart = params.chart,\n    options = params.options;\n  var data = options.data,\n    lineStyle = options.lineStyle,\n    color = options.color,\n    pointOptions = options.point,\n    areaOptions = options.area;\n  chart.data(data);\n  // 雷达图 主 geometry\n  var primary = deepAssign({}, params, {\n    options: {\n      line: {\n        style: lineStyle,\n        color: color\n      },\n      point: pointOptions ? __assign({\n        color: color\n      }, pointOptions) : pointOptions,\n      area: areaOptions ? __assign({\n        color: color\n      }, areaOptions) : areaOptions,\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined\n    }\n  });\n  // 副 Geometry\n  var second = deepAssign({}, primary, {\n    options: {\n      tooltip: false\n    }\n  });\n  // 优先使用 point.state, 其次取主元素的 state 状态样式配置\n  var pointState = (pointOptions === null || pointOptions === void 0 ? void 0 : pointOptions.state) || options.state;\n  var pointParams = deepAssign({}, primary, {\n    options: {\n      tooltip: false,\n      state: pointState\n    }\n  });\n  line(primary);\n  point(pointParams);\n  area(second);\n  return params;\n}\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params) {\n  var _a;\n  var options = params.options;\n  var xAxis = options.xAxis,\n    yAxis = options.yAxis,\n    xField = options.xField,\n    yField = options.yField;\n  return flow(scale((_a = {}, _a[xField] = xAxis, _a[yField] = yAxis, _a)))(params);\n}\n/**\n * coord 配置\n * @param params\n */\nfunction coord(params) {\n  var chart = params.chart,\n    options = params.options;\n  var radius = options.radius,\n    startAngle = options.startAngle,\n    endAngle = options.endAngle;\n  chart.coordinate('polar', {\n    radius: radius,\n    startAngle: startAngle,\n    endAngle: endAngle\n  });\n  return params;\n}\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params) {\n  var chart = params.chart,\n    options = params.options;\n  var xField = options.xField,\n    xAxis = options.xAxis,\n    yField = options.yField,\n    yAxis = options.yAxis;\n  chart.axis(xField, xAxis);\n  chart.axis(yField, yAxis);\n  return params;\n}\n/**\n * label 配置\n * @param params\n */\nfunction label(params) {\n  var chart = params.chart,\n    options = params.options;\n  var label = options.label,\n    yField = options.yField;\n  var geometry = findGeometry(chart, 'line');\n  if (!label) {\n    geometry.label(false);\n  } else {\n    var callback = label.callback,\n      cfg = __rest(label, [\"callback\"]);\n    geometry.label({\n      fields: [yField],\n      callback: callback,\n      cfg: transformLabel(cfg)\n    });\n  }\n  return params;\n}\n/**\n * 雷达图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, theme, coord, axis, legend, tooltip, label, interaction, animation, annotation())(params);\n}","map":{"version":3,"mappings":"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","names":["animation","annotation","interaction","legend","scale","theme","tooltip","area","line","point","deepAssign","findGeometry","flow","transformLabel","geometry","params","options","lineStyle","color","pointOptions","areaOptions","chart","data","primary","style","__assign","label","undefined","second","pointState","state","pointParams","meta","yAxis","xField","yField","_a","xAxis","coord","startAngle","endAngle","coordinate","radius","axis","cfg","fields","callback","adaptor"],"sources":["C:\\Users\\sandeep dangi\\OneDrive\\Desktop\\6th sem\\3rd sem\\company que\\react project\\mern\\admin-app\\node_modules\\@antv\\g2plot\\src\\plots\\radar\\adaptor.ts"],"sourcesContent":["import { animation, annotation, interaction, legend, scale, theme, tooltip } from '../../adaptor/common';\nimport { area, line, point } from '../../adaptor/geometries';\nimport { Params } from '../../core/adaptor';\nimport { deepAssign, findGeometry, flow, transformLabel } from '../../utils';\nimport { RadarOptions } from './types';\n\n/**\n * geometry 配置处理\n * @param params\n */\nfunction geometry(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { data, lineStyle, color, point: pointOptions, area: areaOptions } = options;\n\n  chart.data(data);\n\n  // 雷达图 主 geometry\n  const primary = deepAssign({}, params, {\n    options: {\n      line: {\n        style: lineStyle,\n        color,\n      },\n      point: pointOptions\n        ? {\n            color,\n            ...pointOptions,\n          }\n        : pointOptions,\n      area: areaOptions\n        ? {\n            color,\n            ...areaOptions,\n          }\n        : areaOptions,\n      // label 不传递给各个 geometry adaptor，由 label adaptor 处理\n      label: undefined,\n    },\n  });\n  // 副 Geometry\n  const second = deepAssign({}, primary, {\n    options: {\n      tooltip: false,\n    },\n  });\n  // 优先使用 point.state, 其次取主元素的 state 状态样式配置\n  const pointState = pointOptions?.state || options.state;\n  const pointParams = deepAssign({}, primary, { options: { tooltip: false, state: pointState } });\n\n  line(primary);\n  point(pointParams);\n  area(second);\n\n  return params;\n}\n\n/**\n * meta 配置\n * @param params\n */\nfunction meta(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { options } = params;\n  const { xAxis, yAxis, xField, yField } = options;\n\n  return flow(\n    scale({\n      [xField]: xAxis,\n      [yField]: yAxis,\n    })\n  )(params);\n}\n\n/**\n * coord 配置\n * @param params\n */\nfunction coord(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { radius, startAngle, endAngle } = options;\n\n  chart.coordinate('polar', {\n    radius,\n    startAngle,\n    endAngle,\n  });\n  return params;\n}\n\n/**\n * axis 配置\n * @param params\n */\nfunction axis(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { xField, xAxis, yField, yAxis } = options;\n\n  chart.axis(xField, xAxis);\n  chart.axis(yField, yAxis);\n\n  return params;\n}\n\n/**\n * label 配置\n * @param params\n */\nfunction label(params: Params<RadarOptions>): Params<RadarOptions> {\n  const { chart, options } = params;\n  const { label, yField } = options;\n\n  const geometry = findGeometry(chart, 'line');\n\n  if (!label) {\n    geometry.label(false);\n  } else {\n    const { callback, ...cfg } = label;\n    geometry.label({\n      fields: [yField],\n      callback,\n      cfg: transformLabel(cfg),\n    });\n  }\n\n  return params;\n}\n\n/**\n * 雷达图适配器\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<RadarOptions>) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(geometry, meta, theme, coord, axis, legend, tooltip, label, interaction, animation, annotation())(params);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}