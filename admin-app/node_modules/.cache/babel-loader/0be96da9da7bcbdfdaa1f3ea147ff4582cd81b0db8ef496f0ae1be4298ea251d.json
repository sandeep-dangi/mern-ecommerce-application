{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { deepAssign } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { geometry } from './base';\n/**\n * point 辅助点的配置处理\n * @param params\n */\nexport function point(params) {\n  var options = params.options;\n  var point = options.point,\n    xField = options.xField,\n    yField = options.yField,\n    seriesField = options.seriesField,\n    sizeField = options.sizeField,\n    shapeField = options.shapeField,\n    tooltip = options.tooltip,\n    useDeferredLabel = options.useDeferredLabel;\n  var _a = getTooltipMapping(tooltip, [xField, yField, seriesField, sizeField, shapeField]),\n    fields = _a.fields,\n    formatter = _a.formatter;\n  return point ? geometry(deepAssign({}, params, {\n    options: {\n      type: 'point',\n      colorField: seriesField,\n      shapeField: shapeField,\n      tooltipFields: fields,\n      mapping: __assign({\n        tooltip: formatter\n      }, point),\n      args: {\n        useDeferredLabel: useDeferredLabel\n      }\n    }\n  })) : params;\n}","map":{"version":3,"mappings":";AACA,SAASA,UAAU,QAAQ,aAAa;AACxC,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,QAAQ,QAAyC,QAAQ;AAiBlE;;;;AAIA,OAAM,SAAUC,KAAK,CAAiCC,MAAiB;EAC7D,WAAO,GAAKA,MAAM,QAAX;EACP,SAAK,GAAoFC,OAAO,MAA3F;IAAEC,MAAM,GAA4ED,OAAO,OAAnF;IAAEE,MAAM,GAAoEF,OAAO,OAA3E;IAAEG,WAAW,GAAuDH,OAAO,YAA9D;IAAEI,SAAS,GAA4CJ,OAAO,UAAnD;IAAEK,UAAU,GAAgCL,OAAO,WAAvC;IAAEM,OAAO,GAAuBN,OAAO,QAA9B;IAAEO,gBAAgB,GAAKP,OAAO,iBAAZ;EAEtF,SAAwBJ,iBAAiB,CAACU,OAAO,EAAE,CAACL,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,CAAC,CAAC;IAAtGG,MAAM;IAAEC,SAAS,eAAqF;EAE9G,OAAOX,KAAK,GACRD,QAAQ,CACNF,UAAU,CAAC,EAAE,EAAEI,MAAM,EAAE;IACrBC,OAAO,EAAE;MACPU,IAAI,EAAE,OAAO;MACbC,UAAU,EAAER,WAAW;MACvBE,UAAU,EAAEA,UAAU;MACtBO,aAAa,EAAEJ,MAAM;MACrBK,OAAO;QACLP,OAAO,EAAEG;MAAS,GACfX,KAAK,CACT;MACDgB,IAAI,EAAE;QAAEP,gBAAgB;MAAA;;GAE3B,CAAC,CACH,GACDR,MAAM;AACZ","names":["deepAssign","getTooltipMapping","geometry","point","params","options","xField","yField","seriesField","sizeField","shapeField","tooltip","useDeferredLabel","fields","formatter","type","colorField","tooltipFields","mapping","args"],"sources":["C:\\Users\\sandeep dangi\\OneDrive\\Desktop\\6th sem\\3rd sem\\company que\\react project\\admin-app\\node_modules\\@antv\\g2plot\\src\\adaptor\\geometries\\point.ts"],"sourcesContent":["import { Params } from '../../core/adaptor';\nimport { deepAssign } from '../../utils';\nimport { getTooltipMapping } from '../../utils/tooltip';\nimport { geometry, GeometryOptions, MappingOptions } from './base';\n\nexport interface PointGeometryOptions extends GeometryOptions {\n  /** x 轴字段 */\n  readonly xField?: string;\n  /** y 轴字段 */\n  readonly yField?: string;\n  /** 分组字段 */\n  readonly seriesField?: string;\n  /** size 映射字段 */\n  readonly sizeField?: string;\n  /** shape 的映射字段 */\n  readonly shapeField?: string;\n  /** point 图形映射规则 */\n  readonly point?: MappingOptions;\n}\n\n/**\n * point 辅助点的配置处理\n * @param params\n */\nexport function point<O extends PointGeometryOptions>(params: Params<O>): Params<O> {\n  const { options } = params;\n  const { point, xField, yField, seriesField, sizeField, shapeField, tooltip, useDeferredLabel } = options;\n\n  const { fields, formatter } = getTooltipMapping(tooltip, [xField, yField, seriesField, sizeField, shapeField]);\n\n  return point\n    ? geometry(\n        deepAssign({}, params, {\n          options: {\n            type: 'point',\n            colorField: seriesField,\n            shapeField: shapeField,\n            tooltipFields: fields,\n            mapping: {\n              tooltip: formatter,\n              ...point,\n            },\n            args: { useDeferredLabel },\n          },\n        })\n      )\n    : params;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}