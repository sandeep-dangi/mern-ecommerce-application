{"ast":null,"code":"import Scale from './base';\nvar map = {};\nfunction getClass(key) {\n  return map[key];\n}\nfunction registerClass(key, cls) {\n  if (getClass(key)) {\n    throw new Error(\"type '\" + key + \"' existed.\");\n  }\n  map[key] = cls;\n}\nexport { Scale, getClass as getScale, registerClass as registerScale };","map":{"version":3,"mappings":"AAAA,OAAOA,KAAK,MAAM,QAAQ;AAQ1B,IAAMC,GAAG,GAAa,EAAE;AAExB,SAASC,QAAQ,CAACC,GAAW;EAC3B,OAAOF,GAAG,CAACE,GAAG,CAAC;AACjB;AAEA,SAASC,aAAa,CAACD,GAAW,EAAEE,GAAqB;EACvD,IAAIH,QAAQ,CAACC,GAAG,CAAC,EAAE;IACjB,MAAM,IAAIG,KAAK,CAAC,WAASH,GAAG,eAAY,CAAC;;EAE3CF,GAAG,CAACE,GAAG,CAAC,GAAGE,GAAG;AAChB;AAEA,SAASL,KAAK,EAAEE,QAAQ,IAAIK,QAAQ,EAAEH,aAAa,IAAII,aAAa","names":["Scale","map","getClass","key","registerClass","cls","Error","getScale","registerScale"],"sources":["C:\\Users\\sandeep dangi\\OneDrive\\Desktop\\6th sem\\3rd sem\\company que\\react project\\mern\\admin-app\\node_modules\\@antv\\scale\\src\\factory.ts"],"sourcesContent":["import Scale from './base';\nimport { ScaleConfig } from './types';\ntype ScaleConstructor<T extends Scale = Scale> = new (cfg: ScaleConfig) => T;\n\ninterface ScaleMap {\n  [key: string]: ScaleConstructor;\n}\n\nconst map: ScaleMap = {};\n\nfunction getClass(key: string): ScaleConstructor {\n  return map[key];\n}\n\nfunction registerClass(key: string, cls: ScaleConstructor) {\n  if (getClass(key)) {\n    throw new Error(`type '${key}' existed.`);\n  }\n  map[key] = cls;\n}\n\nexport { Scale, getClass as getScale, registerClass as registerScale };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}